name: "Deploy"

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: "Clonando o projeto"
        uses: actions/checkout@v4


      - name: "Incluindo o JDK 21"
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: "Buildando o projeto"
        run: mvn -B install -f pom.xml

      - name: "Entrando no Dockerhub"
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: "Preparando Docker Build"
        uses: docker/setup-buildx-action@v3

      - name: "Gerando imagem do projeto"
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USER }}/zodh-video-service:latest
            ${{ secrets.DOCKERHUB_USER }}/zodh-video-service:${{ github.sha }}

      - name: "Saindo do Dockerhub"
        run: docker logout
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: "Clonando o projeto"
        uses: actions/checkout@v4

      - name: "Configurando as credenciais da AWS"
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.REGION }}

      - name: "Linkando EKS com K8S do runner"
        run: aws eks update-kubeconfig --name ${{ secrets.CLUSTER_NAME }} --region ${{ secrets.REGION }}

      - name: "Aplicando deployment e service"
        run: |
          pwd
          ls
          kubectl apply -f k8s/video-deployment.yaml
          kubectl apply -f k8s/video-service.yaml
          kubectl apply -f k8s/video-hpa.yaml

      - name: "Atualiza versao da imagem no k8s"
        run: |
          kubectl set image deployment/zodh-video-service zodh-video-service=${{ secrets.DOCKERHUB_USER }}/zodh-video-service:${{ github.sha }} --record
